{"version":3,"sources":["data/Constants.ts","components/TextPlaceholder.tsx","components/AsyncMap.tsx","Firebase.ts","data/Inventory.ts","data/BggData.ts","InventoryProvider.tsx","Helpers.ts","components/BggGame.tsx","components/Container.tsx","components/BggList.tsx","components/CollapsableContainer.tsx","components/BggRequests.tsx","components/IconButton.tsx","components/EventCard.tsx","components/IconLink.tsx","components/ScrollToTop.tsx","components/TouchDecider.tsx","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["CORS_ANYWHERE_DYNO","PIETJESBAK_BBG_COLLECTION","BBG_GAME_API","MAPBOX_KEY","ICONBUTTON_MIN_SCREEN_WIDTH","TextPlaceholder","props","className","renderTitle","paragraphs","paragraphSize","paragraphFn","error","classNames","undefined","Array","fill","map","empty","i","index","renderParagraph","Loadable","loader","loading","firebase","initializeApp","apiKey","authDomain","databaseURL","messagingSenderId","projectId","storageBucket","ChangeEvent","provider","auth","GoogleAuthProvider","database","filter","element","BggGameData","node","id","collectionId","name","year","image","thumbnail","stats","details","requestsThisMonth","requestedByMe","this","Number","attributes","nodeValue","String","getElementsByTagName","childNodes","BggStatsData","yearNodes","length","minPlayers","maxPlayers","minPlaytime","maxPlaytime","rating","BggDetailsData","games","description","categories","family","mechanics","expansions","domain","ownedExpansions","Map","otherExpansions","familyNodes","forEach","set","updateOwnedExpansions","entries","has","html","DOMParser","parseFromString","nextIsProbablyJunk","body","href","Inventory","fetchGamePromise_","ownRequestedGames_","requestedGames_","changeListeners_","user_","users_","message_","firebaseWaitForAuthChange_","getFirebaseRequests_","a","fetchGames_","game","getNextEventDate","date","key","get","Error","ref","getFullYear","getMonth","uid","push","remove","getGames","fetch","constants","response","text","xml","data","children","event","listener","GAME_DATA","call","splice","indexOf","confirmed","getMessage","startTime","Date","console","thresholdDate","setFullYear","setMonth","setDate","getDay","once","message","val","title","Promise","resolve","signOut","then","reject","signInWithRedirect","getRedirectResult","result","user","catch","e","ms","window","setTimeout","status","log","sleep_","child","onAuthStateChanged","admins","admin","USER","on","snapshot","value","ownUid","requests","Set","Object","values","keys","k","v","inventory","React","createContext","Consumer","Provider","withInventory","Component","blendColors","c0","c1","p","f","parseInt","slice","t","R1","G1","B1","R2","G2","B2","Math","round","toString","readableDate","withHour","toLocaleString","weekday","month","day","hour","minute","shuffle","j","floor","random","x","BggGame","showFullDetails","preventDefault","stopPropagation","newState","state","expanded","setState","fetchGameDetails","requestClick","toggleGame","expansionClick","target","dataset","expansion","scrollTo","refs","offsetTop","descriptionArray","part","startsWith","renderlist","renderExpansions","icon","items","isArray","item","size","onClick","other","content","src","alt","players","playtime","renderRequestButton","style","borderColor","toFixed","renderDetails","defaultProps","Container","rest","headerState","url","gamesPerLazyLoad","loaderInterval","updateGames","onPageChanged","page","lazyLoader","gamesPerPage","filteredGames","document","documentElement","scrollTop","clientHeight","scrollHeight","filterGames","searchParams","searchChange","search","assign","defaultExpands","searchExpansion","expansionId","input","q","o","URL","location","loaderDots","progressDots","addChangeListener","addEventListener","clearInterval","removeEventListener","removeChangeListener","bind","gameArr","re","RegExp","escapeStringRegexp","split","join","order","BggList","gameOrder","sort","list","gamesOnPage","type","onChange","renderError","renderLoader","renderGames","Alfabetisch","b","localeCompare","Publicatie","Score","CollapsableContainer","toggle","collapsed","storeCollapsed","localStorage","setItem","encodeURIComponent","stored","getItem","defaultCollapsed","renderCollapsed","renderExpanded","header","hover","SHOWN_ON_HOVER","SHOWN_COLLAPSED","SHOWN","IconButtonBehavour","requestedGames","nextEvent","to","debounce","require","IconButton","handleResize","behaviour","AUTO","windowWidth","innerWidth","active","SMALL","BIG","renderSmall","renderBig","subClass","action","placement","toggleMessage","editing","updateMessage","getTime","readable","now","renderDate","renderEditableEvent","defaultValue","getTimezoneOffset","toISOString","renderEvent","IconLink","exact","activeClassName","ScrollToTop","prevProps","withRouter","TouchDecider","colors","parent","mounted","touches","touchCache","lingeringTouches","winner","lastTime","timeout","onParentResize","width","current","clientWidth","height","drawCanvas","delta","radius","max","offsetLeft","offsetParent","ctx","getContext","clearRect","globalCompositeOperation","touch","beginPath","arc","y","PI","fillStyle","color","identifier","pageX","pageY","angle","strokeStyle","lineWidth","stroke","sqrt","minSize","requestAnimationFrame","touchStart","handleTouches","changedTouches","atan2","touchEnd","delete","createRef","noTouch","logout","username","login","displayName","home","AsyncMap","fontSize","whiteSpace","d","strokeWidth","photoURL","path","component","info","touchDecider","render","noRoute","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","getElementById","process","origin","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.14f1ec90.chunk.js","sourcesContent":["/**\n * A heroku app running cors-anywhere to access some boardgame geek api endpoints.\n * https://github.com/Rob--W/cors-anywhere\n */\nexport const CORS_ANYWHERE_DYNO = \"https://pietjesbak.herokuapp.com/\";\n\n/**\n * The pietjesbak game collection on board game geek.\n */\nexport const PIETJESBAK_BBG_COLLECTION =\n  \"https://www.boardgamegeek.com/xmlapi/collection/de%20pietjesbak?own=1\";\n\n/**\n * Board game geek game details api. Add the board game id. Requires the cors-anywhere dyno.\n */\nexport const BBG_GAME_API = \"https://www.boardgamegeek.com/xmlapi/boardgame/\";\n\n/**\n * Mapbox key.\n * https://www.mapbox.com/account/\n */\nexport const MAPBOX_KEY =\n  \"pk.eyJ1IjoibG9yZ2FuMyIsImEiOiJjamxocmNzbmgwNHJvM3BudnV5NmM5dDU4In0.n01kRSSpjingBJyyrledLg\";\n\n/**\n * Minimum width to also show the text for the icon buttons.\n */\nexport const ICONBUTTON_MIN_SCREEN_WIDTH = 585;\n","import \"../css/TextPlaceholder.css\";\n\nimport classNames from \"classnames\";\nimport React from \"react\";\n\ntype paragraphFnType = (index: number) => React.ReactNode;\nexport interface Props {\n  /**\n   * Render a title as the first element?\n   */\n  renderTitle?: boolean;\n\n  /**\n   * The amount of paragraphs to render.\n   */\n  paragraphs?: number;\n\n  /**\n   * The size (amount of vertical lines) of each paragraph.\n   * Default 1.\n   */\n  paragraphSize?: number;\n\n  /**\n   * A custom function to overwrite the paragraph content.\n   * When set, paragraphSize is ignored.\n   */\n  paragraphFn?: paragraphFnType;\n\n  /**\n   * An error message to show instead of the placeholder.\n   */\n  error?: string;\n}\n\nfunction renderParagraph(\n  index: number,\n  paragraphSize?: number,\n  paragraphFn?: paragraphFnType\n) {\n  if (paragraphFn !== undefined) {\n    return paragraphFn(index);\n  } else {\n    return (\n      <p key={index} className=\"placeholder-paragraph\">\n        {new Array(paragraphSize || 1).fill(null).map((empty, i) => (\n          <span key={i} />\n        ))}\n      </p>\n    );\n  }\n}\n\nexport function TextPlaceholder<\n  T extends React.HTMLAttributes<React.Component>\n>(props: T & Props) {\n  const {\n    className,\n    renderTitle,\n    paragraphs,\n    paragraphSize,\n    paragraphFn,\n    error,\n  } = props;\n\n  return (\n    <div\n      className={classNames(className, \"placeholder-text\", { error: error })}\n    >\n      {error ? (\n        <div className=\"placeholder-error\">\n          <i className=\"icon-attention placeholder-error-icon\" />\n          <span>{error}</span>\n        </div>\n      ) : null}\n\n      {renderTitle !== false ? (\n        <div className=\"placeholder-title\" />\n      ) : undefined}\n      {new Array(paragraphs || 1)\n        .fill(null)\n        .map((empty, i) => renderParagraph(i, paragraphSize, paragraphFn))}\n    </div>\n  );\n}\n","import React from \"react\";\nimport Loadable from \"react-loadable\";\nimport { TextPlaceholder } from \"./TextPlaceholder\";\n\nexport default Loadable({\n  loader: () => import(\"./SimpleMap\"),\n  loading: (props) => {\n    return (\n      <TextPlaceholder\n        renderTitle={false}\n        paragraphSize={8}\n        error={props.error ? \"Fout bij het laden van de kaart.\" : undefined}\n      />\n    );\n  },\n});\n","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\n\nconst config = {\n  apiKey: \"AIzaSyBMBP0S071zw1cg6l2F7fdffYmls888LyY\",\n  authDomain: \"pietjesbak-e8186.firebaseapp.com\",\n  databaseURL: \"https://pietjesbak-e8186.firebaseio.com\",\n  messagingSenderId: \"198433139089\",\n  projectId: \"pietjesbak-e8186\",\n  storageBucket: \"\",\n};\nfirebase.initializeApp(config);\n\nexport const provider = new firebase.auth!.GoogleAuthProvider();\nexport const auth = firebase.auth!();\nexport const database = firebase.database!();\n\nexport default firebase;\n","import { auth, database, provider } from \"../Firebase\";\nimport * as data from \"./BggData\";\nimport { PIETJESBAK_BBG_COLLECTION } from \"./Constants\";\nimport * as constants from \"./Constants\";\n\nexport enum ChangeEvent {\n  GAME_DATA,\n  USER,\n}\n\nexport class Inventory {\n  /**\n   * A promise for all board game geek games.\n   */\n  private fetchGamePromise_: Promise<Map<number, data.BggGameData>> | null =\n    null;\n\n  /**\n   * A map of games you requested and their firebase key.\n   */\n  private ownRequestedGames_: Map<number, string> | null = null;\n\n  /**\n   * A map of all requested games and the amount of times they were requested this month.\n   */\n  private requestedGames_: Map<number, number> | null = null;\n\n  /**\n   * An array of callbacks for when the game lists update.\n   */\n  private changeListeners_: Map<ChangeEvent, Array<(data: any) => void>> =\n    new Map();\n\n  /**\n   * Your user object when logged in to firebase.\n   */\n  private user_: FirebaseUser | null = null;\n\n  /**\n   * All users of the pietjesbak. uid => name\n   */\n  private users_: Map<string, string> = new Map();\n\n  /**\n   * The cached firebase message.\n   */\n  private message_: FirebaseMessage | null = null;\n\n  constructor() {\n    this.firebaseWaitForAuthChange_();\n    this.getFirebaseRequests_();\n    // this.getFirebaseUsers_();\n  }\n\n  /**\n   * Get the board game collection from boardgame geek.\n   */\n  async getGames() {\n    if (this.fetchGamePromise_ === null) {\n      this.fetchGamePromise_ = this.fetchGames_();\n    }\n\n    return await this.fetchGamePromise_;\n  }\n\n  /**\n   * Toggles a request for a game. You need to be logged in for this.\n   *\n   *  @param game The game to toggle.\n   */\n  async toggleGame(game: data.BggGameData) {\n    const date = (await this.getNextEventDate()).date;\n    const key = this.ownRequestedGames_!.get(game.id);\n\n    if (this.user_ === null) {\n      throw new Error(\"You need to be logged in to request a game.\");\n    }\n\n    if (key === undefined) {\n      // Request it.\n      await database\n        .ref(\n          `requests/${date.getFullYear()}/${date.getMonth()}/${this.user_.uid}/`\n        )\n        .push(game.id);\n    } else {\n      // Remove.\n      await database\n        .ref(\n          `requests/${date.getFullYear()}/${date.getMonth()}/${\n            this.user_.uid\n          }/${key}/`\n        )\n        .remove();\n    }\n  }\n\n  /**\n   * Fetches all details for a game.\n   *\n   * @param game The game to fetch details for.\n   */\n  async fetchGameDetails(game: data.BggGameData) {\n    if (game.details !== undefined) {\n      return;\n    }\n\n    game.details = null;\n\n    try {\n      const games = await this.getGames();\n      const response = await fetch(\n        constants.CORS_ANYWHERE_DYNO + constants.BBG_GAME_API + game.id\n      );\n      const xml = new DOMParser().parseFromString(\n        await response.text(),\n        \"text/xml\"\n      );\n\n      game.details = new data.BggDetailsData(\n        xml.children[0].children[0],\n        games\n      );\n    } catch (e) {\n      game.details = undefined; // Reset\n      throw e;\n    }\n\n    return game;\n  }\n\n  /**\n   * Adds a listener that gets called everytime the games change. Contains: all game requests, game requests for the current user and all games.\n   *\n   * @param event    The type of event.\n   * @param listener The listener.\n   */\n  async addChangeListener(event: ChangeEvent, listener: (data: any) => void) {\n    if (this.changeListeners_.has(event) === false) {\n      this.changeListeners_.set(event, [listener]);\n    } else {\n      this.changeListeners_.get(event)!.push(listener);\n    }\n\n    if (event === ChangeEvent.GAME_DATA) {\n      if (this.requestedGames_ !== null) {\n        listener.call(this, await this.getGames());\n      }\n    }\n  }\n\n  /**\n   * Removes a listener that was added using addChangeListener.\n   *\n   * @param event    The type of event.\n   * @param listener The previously added listener.\n   */\n  removeChangeListener(event: ChangeEvent, listener: (data: any) => void) {\n    if (this.changeListeners_.has(event) === true) {\n      this.changeListeners_\n        .get(event)!\n        .splice(this.changeListeners_.get(event)!.indexOf(listener), 1);\n    }\n  }\n\n  /**\n   * Get the currently logged in user.\n   */\n  get user() {\n    return this.user_;\n  }\n\n  /**\n   * Get all users.\n   */\n  get users() {\n    return this.users_;\n  }\n\n  /**\n   * Get a promise containing the next event date and if this date has been confirmed.\n   */\n  async getNextEventDate() {\n    let confirmed = true;\n    let startTime;\n\n    try {\n      const event = await this.getMessage();\n      startTime = new Date(event.date);\n    } catch (r) {\n      console.error(\"Failed to get next event date.\");\n      startTime = new Date();\n    }\n\n    const thresholdDate = new Date();\n\n    // Adjust the start time if the event has passed.\n    for (let i = 0; i < 2 && thresholdDate > startTime; i++) {\n      confirmed = false;\n      startTime.setFullYear(thresholdDate.getFullYear());\n      startTime.setMonth(thresholdDate.getMonth() + i); // Check this month and the next month for the first available event date.\n      startTime.setDate(1); // Set to first day of this month.\n      startTime.setDate(2 * 7 + ((5 - startTime.getDay() + 7) % 7) + 1); // Figure out when the 3rd friday is from here.\n    }\n\n    return {\n      confirmed,\n      date: startTime,\n    };\n  }\n\n  /**\n   * Get the message from firebase.\n   */\n  async getMessage(): Promise<FirebaseMessage> {\n    if (this.message_ === null) {\n      const message = await database.ref(\"message\").once(\"value\");\n      const val = message.val();\n      if (val === null) {\n        throw new Error(\"Message is empty!\");\n      }\n\n      this.message_ = {\n        title: val.title,\n        body: val.body,\n        date: new Date(val.date),\n      };\n    }\n\n    return this.message_;\n  }\n\n  /**\n   * Update the event in firebase.\n   *\n   * @param title The event title.\n   * @param body The event body.\n   * @param date The event date.\n   */\n  async updateMessage(title: string, body: string, date: number) {\n    await database.ref(\"message\").set({\n      title,\n      body,\n      date,\n    });\n\n    this.message_ = null;\n  }\n\n  /***************************************************************\n   * AUTHENTICATION                                              *\n   ***************************************************************/\n\n  /**\n   * Logs out from firebase.\n   */\n  logout() {\n    return new Promise<void>((resolve) => {\n      auth.signOut().then(() => {\n        this.user_ = null;\n        resolve();\n      });\n    });\n  }\n\n  /**\n   * Logs in to firebase.\n   */\n  login(): Promise<FirebaseUser> {\n    return new Promise((resolve, reject) => {\n      auth.signInWithRedirect(provider).then(() => {\n        auth\n          .getRedirectResult()\n          .then((result) => {\n            this.user_ = result.user as FirebaseUser;\n\n            resolve(this.user_!);\n          })\n          .catch((e) => {\n            console.error(e);\n            reject();\n          });\n      });\n    });\n  }\n\n  /***************************************************************\n   * PRIVATE STUFF                                               *\n   ***************************************************************/\n\n  /**\n   * Wraps window.setTimeout into a promise.\n   *\n   * @param ms ms to sleep.\n   */\n  private async sleep_(ms: number) {\n    return new Promise((resolve) => {\n      window.setTimeout(resolve, ms);\n    });\n  }\n\n  /**\n   * Fetches the board game collection from boardgame geek.\n   */\n  private async fetchGames_() {\n    let response;\n    do {\n      try {\n        response = await fetch(PIETJESBAK_BBG_COLLECTION);\n        if (response.status !== 200) {\n          throw new Error(\"Collection not yet available.\");\n        }\n      } catch (e) {\n        console.log(`Trying again in 3 seconds: ${e}`);\n        await this.sleep_(3000);\n      }\n    } while (response === undefined || response.status !== 200);\n\n    const xml = new DOMParser().parseFromString(\n      await response.text(),\n      \"text/xml\"\n    );\n\n    const games = new Map();\n    for (const child of xml.children[0].children as any) {\n      const game = new data.BggGameData(child);\n      games.set(game.id, game);\n    }\n\n    return games;\n  }\n\n  /**\n   * Updates the user when the auth state changes.\n   */\n  private firebaseWaitForAuthChange_() {\n    auth.onAuthStateChanged(async (user) => {\n      if (user) {\n        this.user_ = user as FirebaseUser;\n\n        const admins = await database.ref(\"admins\").once(\"value\");\n        this.user_.admin = admins.val()[user.uid] !== undefined;\n      } else {\n        this.user_ = null;\n      }\n\n      if (this.changeListeners_.has(ChangeEvent.USER) === true) {\n        this.changeListeners_\n          .get(ChangeEvent.USER)!\n          .forEach((listener) => listener.call(this, this.user_));\n      }\n    });\n  }\n\n  /**\n   * Get all game requests from firebase.\n   */\n  private async getFirebaseRequests_() {\n    const date = (await this.getNextEventDate()).date;\n    database\n      .ref(`requests/${date.getFullYear()}/${date.getMonth()}/`)\n      .on(\"value\", async (snapshot) => {\n        if (snapshot !== null) {\n          const value = snapshot.val() as { [key: string]: number };\n          const ownUid = this.user_ !== null ? this.user_.uid : undefined;\n          this.ownRequestedGames_ = new Map();\n          this.requestedGames_ = new Map();\n\n          for (const uid in value) {\n            const requests = [...new Set(Object.values(value[uid]))];\n            if (uid === ownUid) {\n              const keys = Object.keys(value[uid]);\n              for (let i = 0; i < requests.length; i++) {\n                this.ownRequestedGames_.set(requests[i], keys[i]);\n              }\n            }\n\n            for (let i = 0; i < requests.length; i++) {\n              this.requestedGames_.set(\n                requests[i],\n                1 + (this.requestedGames_.get(requests[i]) || 0)\n              );\n            }\n          }\n\n          const games = await this.getGames();\n          for (const [k, v] of games.entries()) {\n            v.requestsThisMonth = this.requestedGames_.get(k) || 0;\n            v.requestedByMe = this.ownRequestedGames_.has(k);\n          }\n\n          if (this.changeListeners_.has(ChangeEvent.GAME_DATA) === true) {\n            this.changeListeners_\n              .get(ChangeEvent.GAME_DATA)!\n              .forEach((listener) => listener.call(this, games));\n          }\n        }\n      });\n  }\n\n  /**\n   * Get all users from firebase.\n   */\n  // private getFirebaseUsers_() {\n  //     database.ref(`users/`).once('value', snapshot => {\n  //         const value = snapshot.val();\n  //         this.users_ = new Map();\n  //         for (const uid in value) {\n  //             this.users_.set(uid, value[uid]);\n  //         }\n\n  //         // You only have access to the users after logging in so the timing should always be right.\n  //         if (this.user !== null && this.users_.has(this.user.uid) === false) {\n  //             database.ref(`users/${this.user.uid}/`).set(this.user.displayName);\n  //         }\n  //     });\n  // }\n}\n","/**\n * Little helper to filter out undefined elements.\n *\n * @param element Any element.\n */\nconst filter = (element: any) => element !== undefined;\n\nclass BggGameData {\n  /**\n   * This element's id.\n   */\n  id: number;\n\n  /**\n   * This element's collection id.\n   */\n  collectionId: number;\n\n  /**\n   * The name of the game.\n   */\n  name: string;\n\n  /**\n   * The publish year.\n   */\n  year?: number;\n\n  /**\n   * Game image.\n   */\n  image: string;\n\n  /**\n   * Game thumbnail.\n   */\n  thumbnail: string;\n\n  /**\n   * Game stats.\n   */\n  stats: BggStatsData;\n\n  /**\n   * Game details.\n   */\n  details?: BggDetailsData | null = undefined;\n\n  /**\n   * The amount of requests this month, not part of boardgame geek.\n   * This should be filled in by firebase.\n   */\n  requestsThisMonth = 0;\n\n  /**\n   * If this game was requested this month by the current use.\n   * This should be filled in by firebase.\n   */\n  requestedByMe = false;\n\n  /**\n   * Data class that represents an item from boardgamegeek.\n   *\n   * @param node An xml node from boardgamegeek.\n   */\n  constructor(node: Element) {\n    this.id = Number(node.attributes[\"objectid\"].nodeValue);\n    this.collectionId = Number(node.attributes[\"collid\"].nodeValue);\n    this.name = String(\n      node.getElementsByTagName(\"name\")[0].childNodes[0].nodeValue\n    );\n    this.year = undefined;\n    this.image = String(\n      node.getElementsByTagName(\"image\")[0].childNodes[0].nodeValue\n    );\n    this.thumbnail = String(\n      node.getElementsByTagName(\"thumbnail\")[0].childNodes[0].nodeValue\n    );\n    this.stats = new BggStatsData(node.getElementsByTagName(\"stats\")[0]);\n\n    const yearNodes = node.getElementsByTagName(\"yearpublished\");\n    if (yearNodes.length === 1) {\n      this.year = Number(yearNodes[0].childNodes[0].nodeValue);\n    }\n  }\n}\n\nclass BggStatsData {\n  /**\n   * Min players.\n   */\n  minPlayers: number;\n\n  /**\n   * Max players.\n   */\n  maxPlayers: number;\n\n  /**\n   * Min play time.\n   */\n  minPlaytime?: number;\n\n  /**\n   * Max play time.\n   */\n  maxPlaytime?: number;\n\n  /**\n   * Game rating.\n   */\n  rating: number;\n\n  /**\n   * Data class that represents boardgamegeek stats.\n   *\n   * @param {item} node An xml node containing the stats.\n   */\n  constructor(node: Element) {\n    this.minPlayers = Number(node.attributes[\"minplayers\"].nodeValue);\n    this.maxPlayers = Number(node.attributes[\"maxplayers\"].nodeValue);\n    this.minPlaytime =\n      node.attributes[\"minplaytime\"] !== undefined\n        ? Number(node.attributes[\"minplaytime\"].nodeValue)\n        : undefined;\n    this.maxPlaytime =\n      node.attributes[\"maxplaytime\"] !== undefined\n        ? Number(node.attributes[\"maxplaytime\"].nodeValue)\n        : undefined;\n    this.rating = Number(\n      node.getElementsByTagName(\"average\")[0].attributes[\"value\"].nodeValue\n    );\n  }\n\n  /**\n   * Get players string.\n   */\n  get players() {\n    if (this.minPlayers === this.maxPlayers) {\n      return `${this.minPlayers} spelers`;\n    }\n\n    return `${this.minPlayers} - ${this.maxPlayers} spelers`;\n  }\n\n  /**\n   * Get playtime string.\n   */\n  get playtime() {\n    if (this.minPlaytime === undefined && this.maxPlaytime === undefined) {\n      return \"???\";\n    }\n\n    if (this.minPlaytime === undefined) {\n      return `${this.maxPlaytime} minuten`;\n    }\n\n    if (this.maxPlaytime === undefined) {\n      return `${this.minPlaytime} minuten`;\n    }\n\n    if (this.minPlaytime === this.maxPlaytime) {\n      return `${this.minPlaytime} minuten`;\n    }\n\n    return `${this.minPlaytime} - ${this.maxPlaytime} minuten`;\n  }\n}\n\nclass BggDetailsData {\n  /**\n   * Game description.\n   */\n  description: string;\n\n  /**\n   * Game categpries.\n   */\n  categories: string[];\n\n  /**\n   * Game family (theme).\n   */\n  family?: string = undefined;\n\n  /**\n   * Game mechanics.\n   */\n  mechanics: string[];\n\n  /**\n   * Game expansions.}\n   */\n  expansions: Map<number, string>;\n\n  /**\n   * Game domain (audience?).\n   */\n  domain: string[];\n\n  /**\n   * Owned expansions.\n   */\n  ownedExpansions: Map<number, string> = new Map();\n\n  /**\n   * Not owned expansions.\n   */\n  otherExpansions: Map<number, string> = new Map();\n\n  /**\n   * Data class that represents boardgamegeek details.\n   *\n   * @param node  An xml node containing the details.\n   * @param games All games.\n   */\n  constructor(node: Element, games: Map<number, BggGameData>) {\n    this.description = String(\n      node.getElementsByTagName(\"description\")[0].childNodes[0].nodeValue\n    );\n    this.categories = [\n      ...(node.getElementsByTagName(\"boardgamecategory\") as any),\n    ]\n      .filter(filter)\n      .map((element: Element) => String(element.childNodes[0].nodeValue));\n\n    const familyNodes = node.getElementsByTagName(\"boardgamefamily\");\n    if (familyNodes.length === 1) {\n      this.family = String(familyNodes[0].childNodes[0].nodeValue);\n    }\n\n    this.mechanics = [\n      ...(node.getElementsByTagName(\"boardgamemechanic\") as any),\n    ]\n      .filter(filter)\n      .map((element: Element) => String(element.childNodes[0].nodeValue));\n\n    this.expansions = new Map();\n    [...(node.getElementsByTagName(\"boardgameexpansion\") as any)]\n      .filter(filter)\n      .forEach((element: Element) =>\n        this.expansions.set(\n          Number(element.attributes[\"objectid\"].nodeValue),\n          String(element.childNodes[0].nodeValue)\n        )\n      );\n\n    this.domain = [...(node.getElementsByTagName(\"boardgamesubdomain\") as any)]\n      .filter(filter)\n      .map((element: Element) => String(element.childNodes[0].nodeValue));\n\n    this.updateOwnedExpansions(games);\n  }\n\n  /**\n   * Updates the owned and other expansion maps.\n   *\n   * @param games All games.\n   */\n  updateOwnedExpansions(games: Map<number, BggGameData>) {\n    const entries = [...this.expansions.entries()];\n\n    this.ownedExpansions = new Map();\n    entries\n      .filter(([id, name]) => games.has(id))\n      .forEach(([id, name]) => this.ownedExpansions.set(id, name));\n\n    this.otherExpansions = new Map();\n    entries\n      .filter(([id, name]) => games.has(id) === false)\n      .forEach(([id, name]) => this.otherExpansions.set(id, name));\n  }\n\n  /**\n   * Get the description as an array of strings without html bits.\n   */\n  get descriptionArray(): string[] {\n    const html = new DOMParser().parseFromString(this.description, \"text/html\");\n\n    let nextIsProbablyJunk = false;\n    return [...(html.body.childNodes as any)].map((node: HTMLElement) => {\n      // After a link there seems to be some truncated text (or a br element). Ignore that truncated text, a br returns an empty string anyways.\n      if (nextIsProbablyJunk) {\n        nextIsProbablyJunk = false;\n        return \"\";\n      }\n\n      // @ts-ignore\n      if (node.href !== undefined) {\n        nextIsProbablyJunk = true;\n        return (node as HTMLLinkElement).href;\n      }\n\n      if (node.nodeValue !== null) {\n        return node.nodeValue;\n      }\n\n      return \"\";\n    });\n  }\n}\n\nexport { BggGameData, BggStatsData, BggDetailsData };\n","import React from \"react\";\nimport { Inventory } from \"./data/Inventory\";\n\nconst inventory = new Inventory();\nconst { Provider, Consumer } = React.createContext(inventory);\n\nexport const InventoryProvider = Provider;\nexport const InventoryConsumer = Consumer;\n\nexport interface InjectedProps {\n  inventory: Inventory;\n}\n\n// This HOC takes a component that requires at least the InjectedProps,\n// and returns an SFC with those InjectedProps already filled in.\nexport function withInventory<OriginalProps>(\n  Component:\n    | React.ComponentType<OriginalProps & InjectedProps>\n    | React.SFC<OriginalProps & InjectedProps>\n): React.SFC<\n  Pick<OriginalProps, Exclude<keyof OriginalProps, keyof InjectedProps>>\n> {\n  return (props: OriginalProps) => {\n    return (\n      <Consumer>\n        {(value) => <Component {...props} inventory={value} />}\n      </Consumer>\n    );\n  };\n}\n","/**\n * Blend to hex color.\n * @param c0 The first hex color.\n * @param c1 The second hex color.\n * @param p The percentage of the first color to blend with the second one.\n */\nexport function blendColors(c0: string, c1: string, p: number) {\n  const f = parseInt(c0.slice(1), 16);\n  const t = parseInt(c1.slice(1), 16);\n  const R1 = f >> 16;\n  const G1 = (f >> 8) & 0x00ff;\n  const B1 = f & 0x0000ff;\n  const R2 = t >> 16;\n  const G2 = (t >> 8) & 0x00ff;\n  const B2 = t & 0x0000ff;\n  return (\n    \"#\" +\n    (\n      0x1000000 +\n      (Math.round((R2 - R1) * p) + R1) * 0x10000 +\n      (Math.round((G2 - G1) * p) + G1) * 0x100 +\n      (Math.round((B2 - B1) * p) + B1)\n    )\n      .toString(16)\n      .slice(1)\n  );\n}\n\n/**\n * Format a date to be humanreadable.\n * @param date The date to format.\n * @param withHour Include the hour and minutes in the output?\n */\nexport function readableDate(date: Date, withHour: boolean) {\n  return date.toLocaleString(\"nl\", {\n    weekday: \"long\",\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n    hour: withHour ? \"numeric\" : undefined,\n    minute: withHour ? \"numeric\" : undefined,\n  });\n}\n\n/**\n * Shuffles an array in place.\n * @param a The array to shuffle.\n */\nexport function shuffle<T>(a: T[]) {\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const x = a[i];\n    a[i] = a[j];\n    a[j] = x;\n  }\n\n  return a;\n}\n\n/**\n * Creates an empty array with the given amount of spots that can be mapped right away.\n * @param count The size of the array.\n */\nexport function repeat(count: number): null[] {\n  return new Array(count).fill(null);\n}\n\n/**\n * Clamps the value between the min and max value.\n * @param min The minimum value.\n * @param value The actual value.\n * @param max The maximum value.\n */\nexport function clamp(min: number, value: number, max: number) {\n  return Math.max(Math.min(value, max), min);\n}\n\n/**\n * Get a random element, number or character from the input.\n * @param param An array or string to get a random element from. Or a max value for a random number.\n * @param max When given, a random number between param and max is returned.\n */\nexport function random<T>(param: T[] | T, max?: number): T {\n  if (typeof param === \"number\") {\n    if (max !== undefined) {\n      return Math.floor(Math.random() * (max - param) + param) as any;\n    } else {\n      return Math.floor(Math.random() * param) as any;\n    }\n  } else {\n    return param[random((param as any).length)];\n  }\n}\n\n/**\n * Creates a promise that resolves after the given time.\n * @param milis The amount of miliseconds to wait.\n */\nexport function wait(milis: number) {\n  return new Promise((resolve) => {\n    window.setTimeout(resolve, milis);\n  });\n}\n","import React from \"react\";\nimport Tooltip from \"react-simple-tooltip\";\nimport { BggGameData } from \"../data/BggData\";\nimport { Inventory } from \"../data/Inventory\";\nimport { blendColors } from \"../Helpers\";\nimport { withInventory } from \"../InventoryProvider\";\n\nexport interface Props {\n  expanded?: boolean;\n  game: BggGameData;\n  expansionClick?: ((id: number) => void) | null;\n  inventory: Inventory;\n}\n\nexport interface State {\n  error: boolean;\n  expanded: boolean;\n  game: BggGameData;\n}\n\nexport class BggGame extends React.Component<\n  Props & React.ClassAttributes<BggGame>,\n  State\n> {\n  static defaultProps: Partial<Props> = {\n    expanded: false,\n    expansionClick: null,\n  };\n\n  constructor(props: Props & React.ClassAttributes<BggGame>) {\n    super(props);\n\n    this.state = {\n      error: false,\n      expanded: false,\n      game: props.game,\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.expanded !== this.state.expanded) {\n      this.showFullDetails();\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.props.expanded === true) {\n      window.scrollTo(0, (this.refs.element as HTMLElement).offsetTop);\n    }\n  }\n\n  componentWillReceiveProps(props: Props) {\n    this.setState({ game: props.game });\n\n    if (props.expanded !== this.state.expanded) {\n      this.showFullDetails();\n    }\n  }\n\n  showFullDetails = async (e?: React.SyntheticEvent) => {\n    if (e !== undefined) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    const newState = !this.state.expanded;\n    this.setState({ expanded: newState });\n    if (newState === true) {\n      try {\n        await this.props.inventory.fetchGameDetails(this.state.game!);\n        this.setState(this.state);\n      } catch (e) {\n        console.error(e);\n        this.setState({ error: true });\n      }\n    }\n  };\n\n  requestClick = (e: React.SyntheticEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    this.props.inventory.toggleGame(this.state.game!);\n  };\n\n  expansionClick = (e: React.SyntheticEvent) => {\n    if (this.props.expansionClick !== null) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      this.props.expansionClick!(\n        Number((e.target as HTMLElement).dataset.expansion)\n      );\n    }\n  };\n\n  renderDetails() {\n    if (this.state.expanded === false) {\n      return;\n    }\n\n    if (this.state.error === true) {\n      return (\n        <div className=\"full-details error\">\n          <h2>Er is iets misgelopen!</h2>\n          <span>\n            Je kan de pagina proberen herladen, stuur ons gerust een mailtje als\n            het blijft gebeuren!\n          </span>\n        </div>\n      );\n    }\n\n    if (\n      this.state.game.details === null ||\n      this.state.game.details === undefined\n    ) {\n      return (\n        <div className=\"full-details\">\n          <div className=\"spinner\">\n            <i className=\"icon-spin1 animate-spin\" />\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"full-details\">\n        <div className=\"warning\">\n          <i className=\"icon-attention\" />\n          Deze info wordt van{\" \"}\n          <a\n            target=\"blank\"\n            href={`https://www.boardgamegeek.com/boardgame/${this.state.game.id}/`}\n          >\n            boardgamegeek\n          </a>{\" \"}\n          gehaald en is dus in het Engels.\n        </div>\n\n        <h3>\n          <i className=\"icon-info\" /> Beschrijving\n        </h3>\n        <p className=\"description\">\n          {this.state.game.details.descriptionArray.map((part, i) => {\n            if (part.startsWith(\"http\")) {\n              return (\n                <a key={i} href={part}>\n                  {part}\n                </a>\n              );\n            }\n            return <span key={i}>{part}</span>;\n          })}\n        </p>\n\n        <dl>\n          {this.renderlist(\"icon-tag\", \"Categorieën\", \"categories\")}\n          {this.renderlist(\"icon-cog\", \"Mechanics\", \"mechanics\")}\n          {this.renderlist(\"icon-users\", \"Soort\", \"domain\")}\n          {this.renderlist(\"icon-globe\", \"Thema\", \"family\")}\n        </dl>\n\n        {this.renderExpansions()}\n      </div>\n    );\n  }\n\n  /**\n   * Renders a list of tag like objects.\n   *\n   * @param icon Icon for this section.\n   * @param name Title for this section.\n   * @param key variable name of where the items are stored.\n   */\n  renderlist(icon: string, name: string, key: string) {\n    let items: string | string[] = this.state.game.details![key];\n\n    if (items === undefined || items.length === 0) {\n      return;\n    }\n\n    if (Array.isArray(items) === false) {\n      items = [items as string];\n    }\n\n    return (\n      <div>\n        <dt>\n          <i className={icon} /> {name}\n        </dt>\n        <dd>\n          <ul className=\"tag-list\">\n            {(items as string[]).map((item) => (\n              <li key={item}>{item}</li>\n            ))}\n          </ul>\n        </dd>\n      </div>\n    );\n  }\n\n  renderExpansions() {\n    if (this.state.game.details!.ownedExpansions.size === 0) {\n      return;\n    }\n\n    return (\n      <section>\n        <h3>\n          <i className=\"icon-puzzle\" /> Uitbreidingen\n        </h3>\n        <ul className=\"tag-list\">\n          {[...this.state.game.details!.ownedExpansions].map(([id, name]) => {\n            return (\n              <li key={id}>\n                <a\n                  target=\"blank\"\n                  href={`https://www.boardgamegeek.com/boardgame/${id}/`}\n                  onClick={this.expansionClick}\n                  data-expansion={id}\n                >\n                  <i className=\"icon-ok\" />\n                  {name}\n                </a>\n              </li>\n            );\n          })}\n          {/* {[...this.state.game.details.otherExpansions].map(([id, name]) => {\n                        return (\n                            <li key={id}>\n                                <a target=\"blank\" href={`https://www.boardgamegeek.com/boardgame/${id}/`}>\n                                    <i className=\"icon-cancel\"></i>\n                                    {name}\n                                </a>\n                            </li>\n                        );\n                    })} */}\n        </ul>\n      </section>\n    );\n  }\n\n  stopPropagation = (e: React.SyntheticEvent) => e.stopPropagation();\n\n  renderRequestButton() {\n    let text: string;\n    let icon: string;\n\n    icon = this.state.game.requestedByMe ? \"icon-heart\" : \"icon-heart-empty\";\n    if (this.state.game.requestsThisMonth === 0) {\n      text = \"Speel dit spel volgende keer\";\n    } else if (this.state.game.requestsThisMonth === 1) {\n      if (this.state.game.requestedByMe === true) {\n        text = \"Jij wil dit spelen\";\n      } else {\n        text = \"Iemand wil dit spelen\";\n      }\n    } else {\n      if (this.state.game.requestedByMe === true) {\n        const other =\n          this.state.game.requestsThisMonth > 2 ? \"anderen\" : \"andere\";\n        text = `Jij en ${\n          this.state.game.requestsThisMonth - 1\n        } ${other} willen dit spelen`;\n      } else {\n        text = `${this.state.game.requestsThisMonth} anderen willen dit spelen`;\n      }\n    }\n\n    if (this.props.inventory.user === null) {\n      return (\n        <div className=\"info pointer\">\n          <span className=\"hover\" onClick={this.stopPropagation}>\n            <Tooltip content=\"Log in om aan te geven dat je dit spel wil spelen\">\n              <i className={icon} />{\" \"}\n              <span className=\"whitespace-normal\">{text}</span>\n            </Tooltip>\n          </span>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"info pointer\">\n          <span className=\"hover\" onClick={this.requestClick}>\n            <i className={icon} />{\" \"}\n            <span className=\"whitespace-normal\">{text}</span>\n          </span>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <li\n        className={this.state.expanded ? \"expanded\" : \"\"}\n        key={this.state.game.id}\n        ref=\"element\"\n      >\n        <span>\n          <div className=\"thumb-holder pointer\" onClick={this.showFullDetails}>\n            <img src={this.state.game.thumbnail} alt={this.state.game.name} />\n          </div>\n          <div className=\"details\">\n            <h3 className=\"pointer\" onClick={this.showFullDetails}>\n              {this.state.game.name}\n            </h3>\n            <div className=\"info-holder\">\n              <div>\n                <div className=\"info\">\n                  <i className=\"icon-users\" /> {this.state.game.stats.players}\n                </div>\n                <div className=\"info\">\n                  <i className=\"icon-clock\" /> {this.state.game.stats.playtime}\n                </div>\n                {this.renderRequestButton()}\n              </div>\n              <div\n                className=\"score\"\n                style={{\n                  borderColor: blendColors(\n                    \"#FF0000\",\n                    \"#00FF00\",\n                    this.state.game.stats.rating / 12\n                  ),\n                }}\n              >\n                {this.state.game.stats.rating.toFixed(1)}\n              </div>\n            </div>\n          </div>\n        </span>\n        {this.renderDetails()}\n      </li>\n    );\n  }\n}\n\nexport default withInventory(BggGame);\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport \"../css/Container.css\";\n\nexport interface Props {\n  /**\n   * Does the container contain an error? Affects the colors.\n   */\n  error?: boolean;\n\n  /**\n   * Required for some reason. Just means you can add children to the container.\n   */\n  children?: React.ReactNode;\n}\n\nexport function Container<T extends React.HTMLAttributes<HTMLDivElement>>(\n  props: T & Props\n) {\n  // @ts-ignore Spreading types with generics is not supported (yet).\n  const { className, error, ...rest } = props;\n\n  return (\n    <div\n      className={classNames(className, \"container\", { error: error })}\n      {...rest}\n    />\n  );\n}\n","import \"../css/Games.css\";\n\n// import Pager from 'react-pager';\nimport escapeStringRegexp from \"escape-string-regexp\";\nimport React from \"react\";\nimport { BggGameData } from \"../data/BggData\";\nimport { CORS_ANYWHERE_DYNO } from \"../data/Constants\";\nimport { ChangeEvent, Inventory } from \"../data/Inventory\";\nimport { withInventory } from \"../InventoryProvider\";\nimport BggGame from \"./BggGame\";\nimport { Container } from \"./Container\";\n\nexport interface State {\n  games: Map<number, BggGameData> | null;\n  filteredGames: BggGameData[];\n  page: number;\n  gamesPerPage: number;\n  search: { q: string; o: number };\n  error: boolean;\n  defaultExpands: number[];\n  loaderDots: string;\n}\n\nexport interface Props {\n  inventory: Inventory;\n}\n\nexport class BggList extends React.Component<\n  Props & React.ClassAttributes<BggList>,\n  State\n> {\n  /**\n   * Returns all order algorithms.\n   */\n  static gameOrder(): {\n    [key: string]: (a: BggGameData, b: BggGameData) => number;\n  } {\n    return {\n      Alfabetisch: (a, b) => a.name.localeCompare(b.name),\n      \"Aantal spelers ↑\": (a, b) =>\n        a.stats.minPlayers - b.stats.minPlayers ||\n        a.stats.maxPlayers - b.stats.maxPlayers,\n      \"Aantal spelers ↓\": (a, b) =>\n        b.stats.maxPlayers - a.stats.maxPlayers ||\n        b.stats.minPlayers - a.stats.minPlayers,\n      \"Spelduur ↑\": (a, b) =>\n        a.stats.minPlaytime! - b.stats.minPlaytime! ||\n        a.stats.maxPlaytime! - b.stats.maxPlaytime!,\n      \"Spelduur ↓\": (a, b) =>\n        b.stats.maxPlaytime! - a.stats.maxPlaytime! ||\n        b.stats.minPlaytime! - a.stats.minPlaytime!,\n      Publicatie: (a, b) => b.year! - a.year!,\n      Score: (a, b) => b.stats.rating - a.stats.rating,\n    };\n  }\n\n  /**\n   * The current url.\n   */\n  url: URL;\n\n  /**\n   * The amount of games to draw per lazy load.\n   */\n  gamesPerLazyLoad: number;\n\n  /**\n   * The loader interval.\n   */\n  loaderInterval: number | null;\n\n  constructor(props: Props & React.ClassAttributes<BggList>) {\n    super(props);\n    this.url = new URL(window.location.href);\n\n    // Fuck you, Edge\n    // This won't work but at least it doesn't crash.\n    if (this.url.searchParams === undefined) {\n      console.log(\"Please use a real browser ლ(ಠ益ಠლ)\");\n      // @ts-ignore\n      this.url.searchParams = new Map();\n    }\n\n    this.gamesPerLazyLoad = 5;\n\n    this.state = {\n      defaultExpands: [],\n      error: false,\n      filteredGames: [],\n      games: null,\n      gamesPerPage: this.gamesPerLazyLoad,\n      loaderDots: \"\",\n      page: Number(this.url.searchParams.get(\"p\")) || 0,\n      search: {\n        o: 0,\n        q: \"\",\n      },\n    };\n\n    this.loaderInterval = null;\n\n    // Make sure the dyno is running.\n    fetch(CORS_ANYWHERE_DYNO);\n  }\n\n  componentDidMount() {\n    this.progressDots();\n    this.props.inventory.addChangeListener(\n      ChangeEvent.GAME_DATA,\n      this.updateGames\n    );\n\n    window.addEventListener(\"scroll\", this.lazyLoader);\n    window.addEventListener(\"resize\", this.lazyLoader);\n  }\n\n  componentWillUnmount() {\n    if (this.loaderInterval !== null) {\n      clearInterval(this.loaderInterval);\n    }\n\n    window.removeEventListener(\"scroll\", this.lazyLoader);\n    window.removeEventListener(\"resize\", this.lazyLoader);\n\n    this.props.inventory.removeChangeListener(\n      ChangeEvent.GAME_DATA,\n      this.updateGames\n    );\n  }\n\n  componentDidUpdate() {\n    // So a bigger list is loaded on high screens.\n    this.lazyLoader();\n  }\n\n  updateGames = (games: Map<number, BggGameData>) => {\n    this.setState({ games });\n    this.onPageChanged(this.state.page);\n  };\n\n  lazyLoader = () => {\n    if (\n      this.state.gamesPerPage < this.state.filteredGames.length &&\n      ((document.documentElement.scrollTop || document.body.scrollTop) +\n        document.documentElement.clientHeight >=\n        document.documentElement.scrollHeight - 200 ||\n        document.documentElement.scrollHeight ===\n          document.documentElement.clientHeight)\n    ) {\n      this.setState({\n        gamesPerPage: this.state.gamesPerPage + this.gamesPerLazyLoad,\n      });\n    }\n  };\n\n  /**\n   * Called by the pager.\n   *\n   * @param page The page to change to.\n   */\n  onPageChanged = (page: number) => {\n    if (page < 0) {\n      page = 0;\n    }\n\n    const filteredGames = this.filterGames();\n    if (page > Math.floor(filteredGames.length / this.state.gamesPerPage)) {\n      page = Math.floor(filteredGames.length / this.state.gamesPerPage);\n    }\n\n    this.url.searchParams.set(\"p\", String(page));\n    // window.history.replaceState(null, null, this.url.toString());\n\n    this.setState({\n      page,\n      filteredGames,\n    });\n  };\n\n  progressDots() {\n    if (this.state.games === null) {\n      let loaderDots = this.state.loaderDots;\n      if (loaderDots.length >= 3) {\n        loaderDots = \"\";\n      }\n\n      loaderDots += \".\";\n      this.setState({ loaderDots });\n      this.loaderInterval = window.setTimeout(\n        this.progressDots.bind(this),\n        300\n      );\n    }\n  }\n\n  searchChange = async (e: React.ChangeEvent) => {\n    const search = Object.assign({}, this.state.search);\n    search[(e.target as HTMLInputElement).dataset.key!] = (\n      e.target as HTMLInputElement\n    ).value;\n    await this.setState({\n      search,\n      gamesPerPage: this.gamesPerLazyLoad,\n      defaultExpands: [],\n    });\n    this.onPageChanged(this.state.page);\n  };\n\n  searchExpansion = async (expansionId: number) => {\n    const expansion = (await this.props.inventory.getGames()).get(expansionId);\n    if (expansion !== undefined) {\n      (this.refs.input as HTMLInputElement).value = expansion.name;\n      await this.setState({\n        search: { q: expansion.name, o: 0 },\n        gamesPerPage: this.gamesPerLazyLoad,\n        defaultExpands: [expansionId],\n        filteredGames: [expansion],\n        page: 0,\n      });\n    }\n  };\n\n  /**\n   * Filters and sorts the games.\n   */\n  filterGames() {\n    if (this.state.games === null) {\n      return [];\n    }\n\n    let gameArr = [...this.state.games.values()];\n    const re = new RegExp(\n      escapeStringRegexp(this.state.search.q).split(\" \").join(\"|\"),\n      \"i\"\n    ); // match word or word or ...\n    if (this.state.search.q !== undefined) {\n      gameArr = gameArr.filter((game) => game.name.search(re) !== -1);\n    }\n\n    if (this.state.search.o !== undefined) {\n      const order = BggList.gameOrder();\n      const index = Object.keys(order)[this.state.search.o];\n      gameArr = gameArr.sort(order[index]);\n    }\n\n    return gameArr;\n  }\n\n  renderLoader() {\n    return (\n      <Container>\n        <h2>\n          De spellencollectie wordt van{\" \"}\n          <a href=\"https://boardgamegeek.com/user/de%20pietjesbak/games\">\n            Boardgamegeek\n          </a>{\" \"}\n          gehaald.\n        </h2>\n        <span>Dit kan even duren{this.state.loaderDots}</span>\n      </Container>\n    );\n  }\n\n  renderError() {\n    return (\n      <Container error={true}>\n        <h2>Er is iets misgelopen!</h2>\n        <span>\n          Je kan de pagina proberen herladen, stuur ons gerust een mailtje als\n          het blijft gebeuren!\n        </span>\n      </Container>\n    );\n  }\n\n  renderGames() {\n    const gamesOnPage = this.state.filteredGames.slice(\n      this.state.page * this.state.gamesPerPage,\n      this.state.page * this.state.gamesPerPage + this.state.gamesPerPage\n    );\n    let list;\n    if (this.state.filteredGames.length === 0) {\n      list = <h3 className=\"no-results\">Geen resultaten!</h3>;\n    } else {\n      list = (\n        <ul className=\"games\">\n          {gamesOnPage.map((game) => (\n            <BggGame\n              key={game.id}\n              game={game}\n              expanded={this.state.defaultExpands.indexOf(game.id) !== -1}\n              expansionClick={this.searchExpansion}\n            />\n          ))}\n          {this.state.filteredGames.length > this.state.gamesPerPage ? (\n            <li className=\"spinner\">\n              <i className=\"icon-spin1 animate-spin\" />\n            </li>\n          ) : (\n            \"\"\n          )}\n        </ul>\n      );\n    }\n\n    return (\n      <div className=\"bgg-list\">\n        <div className=\"searchbar\">\n          <h3>Zoeken</h3>\n          <input\n            type=\"text\"\n            className=\"search\"\n            data-key=\"q\"\n            onChange={this.searchChange}\n            ref=\"input\"\n          />\n          <select className=\"order\" data-key=\"o\" onChange={this.searchChange}>\n            {Object.keys(BggList.gameOrder()).map((order, i) => (\n              <option key={i} value={i}>\n                {order}\n              </option>\n            ))}\n          </select>\n          <p className=\"matches\">\n            {this.state.filteredGames.length}{\" \"}\n            {this.state.filteredGames.length === 1 ? \"spel\" : \"spellen\"}\n          </p>\n        </div>\n        <div className=\"content\">\n          {list}\n          {/* <Pager\n                        total={Math.ceil(this.state.filteredGames.length / this.state.gamesPerPage)}\n                        current={this.state.page}\n                        visiblePages={10}\n                        titles={{ first: '⟵', last: '⟶' }}\n                        onPageChanged={this.onPageChanged}\n                    /> */}\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    if (this.state.error === true) {\n      return this.renderError();\n    }\n\n    if (this.state.games === null) {\n      return this.renderLoader();\n    }\n\n    return this.renderGames();\n  }\n}\n\nexport default withInventory(BggList);\n","import classNames from \"classnames\";\nimport React from \"react\";\nimport { Container } from \"./Container\";\n\nexport interface State {\n  collapsed: boolean;\n}\n\nexport enum headerState {\n  /**\n   * The header is always shown. (default)\n   */\n  SHOWN,\n\n  /**\n   * The header is shown when hovering inside the container.\n   */\n  SHOWN_ON_HOVER,\n\n  /**\n   * The header is shown when hovering inside the container and always shown when collapsed.\n   */\n  SHOWN_COLLAPSED,\n}\n\nexport interface Props extends React.HTMLAttributes<HTMLDivElement> {\n  /**\n   * Is the container open or closed by default.\n   * Default open.\n   */\n  defaultCollapsed?: boolean;\n\n  /**\n   * An optional title to show when the container is closed.\n   */\n  title?: string;\n\n  /**\n   * How should the header behave?\n   * Default shown.\n   */\n  header?: headerState;\n\n  /**\n   * Does the container contain an error? Affects the colors.\n   * Note: this prop is just passed through to the child container.\n   */\n  error?: boolean;\n\n  /**\n   * Store the collapsed state in localstorage? Default false\n   * A title is required to store the state.\n   */\n  storeCollapsed?: boolean;\n}\n\nexport class CollapsableContainer extends React.Component<Props, State> {\n  static defaultProps = {\n    header: headerState.SHOWN,\n  };\n\n  constructor(props: Props) {\n    super(props);\n\n    let collapsed: boolean | null = null;\n    if (props.storeCollapsed && props.title) {\n      const stored = localStorage.getItem(encodeURIComponent(props.title));\n      if (stored !== null) {\n        collapsed = stored === \"true\";\n      }\n    }\n    if (collapsed === null) {\n      collapsed = props.defaultCollapsed || false;\n    }\n\n    this.state = {\n      collapsed,\n    };\n  }\n\n  toggle = () => {\n    const newState = !this.state.collapsed;\n    this.setState({\n      collapsed: newState,\n    });\n\n    if (this.props.storeCollapsed && this.props.title) {\n      localStorage.setItem(\n        encodeURIComponent(this.props.title),\n        String(newState)\n      );\n    }\n  };\n\n  render(): JSX.Element {\n    return this.state.collapsed\n      ? this.renderCollapsed()\n      : this.renderExpanded();\n  }\n\n  renderCollapsed() {\n    const { children, className, title, header, storeCollapsed, ...rest } =\n      this.props;\n    return (\n      <Container className={classNames(className, \"collapsable\")} {...rest}>\n        <h3\n          className={classNames(\"collapsed-header\", {\n            hover: header === headerState.SHOWN_ON_HOVER,\n          })}\n          onClick={this.toggle}\n        >\n          <i className=\"container-button icon-window-maximize\" />\n          <span>{title}</span>\n        </h3>\n      </Container>\n    );\n  }\n\n  renderExpanded() {\n    const { children, className, title, header, storeCollapsed, ...rest } =\n      this.props;\n\n    return (\n      <Container className={classNames(className, \"collapsable\")} {...rest}>\n        <h3\n          className={classNames(\"collapsed-header\", {\n            hover:\n              header === headerState.SHOWN_ON_HOVER ||\n              header === headerState.SHOWN_COLLAPSED,\n          })}\n          onClick={this.toggle}\n        >\n          <i className=\"container-button icon-window-minimize\" />\n          <span>{title}</span>\n        </h3>\n        <div className=\"content\">{children}</div>\n      </Container>\n    );\n  }\n}\n","import \"../css/Games.css\";\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { BggGameData } from \"../data/BggData\";\nimport * as constants from \"../data/Constants\";\nimport { ChangeEvent, Inventory } from \"../data/Inventory\";\nimport { readableDate } from \"../Helpers\";\nimport { withInventory } from \"../InventoryProvider\";\nimport BggGame from \"./BggGame\";\nimport { CollapsableContainer, headerState } from \"./CollapsableContainer\";\nimport { TextPlaceholder } from \"./TextPlaceholder\";\n\nexport interface State {\n  requestedGames: BggGameData[] | null;\n  nextEvent: { date: Date; confirmed: boolean } | null;\n}\n\nexport interface Props {\n  inventory: Inventory;\n}\n\nexport class BggRequests extends React.Component<\n  Props & React.ClassAttributes<BggRequests>,\n  State\n> {\n  constructor(props: Props & React.ClassAttributes<BggRequests>) {\n    super(props);\n\n    this.state = {\n      requestedGames: null,\n      nextEvent: null,\n    };\n\n    // Make sure the dyno is running.\n    fetch(constants.CORS_ANYWHERE_DYNO);\n  }\n\n  async componentDidMount() {\n    this.props.inventory.addChangeListener(\n      ChangeEvent.GAME_DATA,\n      this.updateGames\n    );\n\n    this.setState({ nextEvent: await this.props.inventory.getNextEventDate() });\n  }\n\n  componentWillUnmount() {\n    this.props.inventory.removeChangeListener(\n      ChangeEvent.GAME_DATA,\n      this.updateGames\n    );\n  }\n\n  updateGames = (games: Map<number, BggGameData>) => {\n    const requestedGames = [...games.values()]\n      .filter((game) => game.requestsThisMonth > 0)\n      .sort(\n        (a, b) =>\n          b.requestsThisMonth - a.requestsThisMonth ||\n          b.stats.rating - a.stats.rating\n      );\n    this.setState({ requestedGames });\n  };\n\n  render() {\n    let date = <span>de volgende keer</span>;\n\n    if (this.state.nextEvent !== null) {\n      date = (\n        <span>\n          {readableDate(this.state.nextEvent.date, false)}{\" \"}\n          <span className=\"mute\">\n            {\" \"}\n            {this.state.nextEvent.confirmed ? \"\" : \"(nog niet vastgelegd)\"}\n          </span>\n        </span>\n      );\n    }\n\n    if (this.state.requestedGames === null) {\n      return (\n        <CollapsableContainer\n          title=\"Aanvragen\"\n          header={headerState.SHOWN_COLLAPSED}\n          storeCollapsed={true}\n        >\n          <h3>Aanvragen voor {date}</h3>\n          <TextPlaceholder renderTitle={false} paragraphSize={4} />\n        </CollapsableContainer>\n      );\n    }\n\n    if (this.state.requestedGames.length === 0) {\n      return (\n        <CollapsableContainer\n          title=\"Aanvragen\"\n          header={headerState.SHOWN_COLLAPSED}\n          storeCollapsed={true}\n        >\n          <h3>Aanvragen voor {date}</h3>\n          <p>\n            Er zijn nog geen aanvragen. <br />\n            Geef aan welk spel je volgende keer graag wil spelen op de{\" \"}\n            <Link to=\"/games\">games</Link> pagina! <br />\n            <br />\n            Of neem gerust enkele van je eigen spellen mee.\n          </p>\n        </CollapsableContainer>\n      );\n    }\n\n    return (\n      <CollapsableContainer\n        title=\"Aanvragen\"\n        header={headerState.SHOWN_COLLAPSED}\n        storeCollapsed={true}\n      >\n        <h3>Aanvragen voor {date}</h3>\n        <ul className=\"games\">\n          {this.state.requestedGames.map((game) => (\n            <BggGame key={game.id} game={game} />\n          ))}\n        </ul>\n      </CollapsableContainer>\n    );\n  }\n}\n\nexport default withInventory(BggRequests);\n","import \"../css/IconButton.css\";\n\nimport classNames from \"classnames\";\nimport React from \"react\";\nimport Tooltip from \"react-simple-tooltip\";\nimport { ICONBUTTON_MIN_SCREEN_WIDTH } from \"../data/Constants\";\n\nconst debounce = require(\"debounce\");\n\nexport interface State {\n  windowWidth: number;\n  active: boolean;\n}\n\nexport enum IconButtonBehavour {\n  SMALL,\n  BIG,\n  AUTO,\n}\n\nexport interface Props extends React.HTMLAttributes<IconButton> {\n  text: string | JSX.Element;\n  placement?: \"left\" | \"top\" | \"right\" | \"bottom\";\n  subClass?: string;\n  icon: string;\n  to?: string;\n  behaviour?: IconButtonBehavour;\n\n  action?: (e: React.SyntheticEvent) => void;\n}\n\nexport default class IconButton extends React.Component<Props, State> {\n  static defaultProps = {\n    behaviour: IconButtonBehavour.AUTO,\n  };\n\n  handleResize = debounce(() => {\n    if (this.props.behaviour === IconButtonBehavour.AUTO) {\n      this.setState({\n        windowWidth: window.innerWidth,\n      });\n    }\n  });\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      windowWidth: window.innerWidth,\n      active: false,\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.handleResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleResize);\n  }\n\n  render() {\n    if (\n      (this.state.windowWidth <= ICONBUTTON_MIN_SCREEN_WIDTH ||\n        this.props.behaviour === IconButtonBehavour.SMALL) &&\n      this.props.behaviour !== IconButtonBehavour.BIG\n    ) {\n      return this.renderSmall();\n    } else {\n      return this.renderBig();\n    }\n  }\n\n  renderBig() {\n    return (\n      <button\n        className={classNames(\"button\", this.props.subClass)}\n        onClick={this.props.action}\n      >\n        <i className={\"icon-\" + this.props.icon} /> {this.props.text}\n      </button>\n    );\n  }\n\n  renderSmall() {\n    return (\n      <Tooltip content={this.props.text} placement={this.props.placement}>\n        <button\n          className={classNames(\"small-button\", this.props.subClass)}\n          onClick={this.props.action}\n        >\n          <i className={\"icon-\" + this.props.icon} />\n        </button>\n      </Tooltip>\n    );\n  }\n}\n","import \"../css/EventCard.css\";\n\nimport classNames from \"classnames\";\nimport React from \"react\";\nimport { Inventory } from \"../data/Inventory\";\nimport { readableDate } from \"../Helpers\";\nimport { withInventory } from \"../InventoryProvider\";\nimport { Container } from \"./Container\";\nimport IconButton, { IconButtonBehavour } from \"./IconButton\";\nimport { TextPlaceholder } from \"./TextPlaceholder\";\n\nexport interface State {\n  editing: boolean;\n  event: FirebaseMessage | null;\n  error: boolean;\n}\n\nexport interface Props {\n  inventory: Inventory;\n}\n\nexport class EventCard extends React.Component<\n  Props & React.ClassAttributes<EventCard>,\n  State\n> {\n  constructor(props: Props & React.ClassAttributes<EventCard>) {\n    super(props);\n    this.state = {\n      editing: false,\n      event: null,\n      error: false,\n    };\n  }\n\n  componentDidMount() {\n    this.updateMessage();\n  }\n\n  async updateMessage() {\n    try {\n      const event = await this.props.inventory.getMessage();\n      this.setState({ event });\n    } catch (e) {\n      console.error(e);\n      this.setState({ error: true });\n    }\n  }\n\n  toggleMessage = async () => {\n    if (this.state.editing === true) {\n      await this.props.inventory.updateMessage(\n        (this.refs.title as HTMLInputElement).value,\n        (this.refs.body as HTMLTextAreaElement).value,\n        new Date((this.refs.date as HTMLInputElement).value).getTime()\n      );\n\n      this.updateMessage();\n    }\n\n    this.setState({ editing: this.state.editing === false });\n  };\n\n  renderDate(date: Date) {\n    const readable = readableDate(date, true);\n\n    if (Date.now() - date.getTime() < 0) {\n      return (\n        <div className=\"date valid\">\n          <span>Op {readable}</span>\n        </div>\n      );\n    }\n\n    if (Date.now() - date.getTime() < 1000 * 60 * 60 * 5) {\n      return (\n        <div className=\"date ongoing\">\n          <span>Op {readable}</span>\n          <br />\n          <span>\n            <strong>Nu aan de gang!</strong>\n          </span>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"date expired\">\n        <span>Op {readable}</span>\n        <br />\n        <span>\n          Dit event is voorbij, nieuwe events worden meestal 2 weken op voorhand\n          gepland.\n        </span>\n      </div>\n    );\n  }\n\n  renderEvent(event: FirebaseMessage | null, error: boolean) {\n    if (error === true) {\n      return (\n        <div className=\"event\">\n          <h2>Er lijkt geen volgend event gepland te zijn.</h2>\n        </div>\n      );\n    }\n\n    if (event === null) {\n      return (\n        <div className=\"event\">\n          <TextPlaceholder paragraphs={2} paragraphSize={3} />\n        </div>\n      );\n    }\n\n    if (this.state.editing === false) {\n      return (\n        <div className=\"event\">\n          <h2>{event.title}</h2>\n          {this.renderDate(event.date)}\n          <br />\n\n          {event.body.split(\"\\n\").map((item, key) => {\n            return (\n              <span key={key}>\n                {item}\n                <br />\n              </span>\n            );\n          })}\n        </div>\n      );\n    } else {\n      return this.renderEditableEvent(event);\n    }\n  }\n\n  renderEditableEvent(event: FirebaseMessage) {\n    return (\n      <div className=\"content\">\n        <input type=\"text\" defaultValue={event.title} ref=\"title\" />\n        <input\n          type=\"datetime-local\"\n          defaultValue={new Date(\n            event.date.getTime() - event.date.getTimezoneOffset() * 60000\n          )\n            .toISOString()\n            .slice(0, -1)}\n          ref=\"date\"\n        />\n        <textarea defaultValue={event.body} ref=\"body\" />\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <Container\n        className={classNames(\"event-card\", { error: this.state.error })}\n      >\n        <a\n          className=\"facebook\"\n          href=\"https://www.facebook.com/gezelschapsspellenpietjesbak/\"\n        >\n          <i className=\"icon-facebook-squared\" />\n        </a>\n\n        {this.renderEvent(this.state.event, this.state.error)}\n        {this.props.inventory.user !== null &&\n        this.props.inventory.user.admin === true ? (\n          <IconButton\n            subClass=\"edit-event\"\n            action={this.toggleMessage}\n            icon=\"cog\"\n            text={this.state.editing ? \"Opslaan\" : \"Aanpassen\"}\n            behaviour={IconButtonBehavour.SMALL}\n          />\n        ) : (\n          <span />\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default withInventory(EventCard);\n","import classNames from \"classnames\";\nimport React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport Tooltip from \"react-simple-tooltip\";\nimport IconButton from \"./IconButton\";\n\nclass IconLink extends IconButton {\n  renderBig() {\n    return (\n      <NavLink\n        exact={true}\n        className={classNames(\"button\", this.props.subClass)}\n        activeClassName=\"active\"\n        to={this.props.to!}\n      >\n        <i className={\"icon-\" + this.props.icon} /> {this.props.text}\n      </NavLink>\n    );\n  }\n\n  renderSmall() {\n    return (\n      <Tooltip content={this.props.text} placement={this.props.placement}>\n        <NavLink\n          exact={true}\n          className={classNames(\"small-button\", this.props.subClass)}\n          activeClassName=\"active\"\n          to={this.props.to!}\n        >\n          <i className={\"icon-\" + this.props.icon} />\n        </NavLink>\n      </Tooltip>\n    );\n  }\n}\n\nexport default IconLink;\n","import { Component } from \"react\";\nimport { withRouter } from \"react-router\";\n\nclass ScrollToTop extends Component<any> {\n  componentDidUpdate(prevProps: any) {\n    if (this.props.location !== prevProps.location) {\n      window.scrollTo(0, 0);\n    }\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n\nexport default withRouter(ScrollToTop);\n","import \"../css/TouchDecider.css\";\n\nimport React from \"react\";\nimport { shuffle } from \"../Helpers\";\n\ninterface TouchObj {\n  size: number;\n  minSize: number;\n  color: string;\n  x: number;\n  y: number;\n  angle: number;\n}\n\ninterface State {\n  width: number;\n  height: number;\n  noTouch: boolean;\n}\n\nclass TouchDecider extends React.Component<{}, State> {\n  /**\n   * Colors for the different touches.\n   */\n  colors = [\n    \"#e53935\",\n    \"#d81b60\",\n    \"#8e24aa\",\n    \"#5e35b1\",\n    \"#3949ab\",\n    \"#1e88e5\",\n    \"#039be5\",\n    \"#00acc1\",\n    \"#00897b\",\n    \"#43a047\",\n    \"#7cb342\",\n    \"#c0ca33\",\n    \"#ffb300\",\n    \"#fb8c00\",\n    \"#f4511e\",\n    \"#6d4c41\",\n    \"#757575\",\n    \"#546e7a\",\n    \"#59547a\",\n  ];\n\n  /**\n   * Reference for drawing on the canvas.\n   */\n  ref: React.RefObject<HTMLCanvasElement>;\n\n  /**\n   * Reference to the canvas parent so we know how big to make the canvas.\n   */\n  parent: React.RefObject<HTMLDivElement>;\n\n  /**\n   * Keeps track of whether the component is mounted so we know when to animate it.\n   */\n  mounted: boolean;\n\n  /**\n   * The current touches on the canvas.\n   */\n  touches: Touch[] = [];\n\n  /**\n   * The state of the touches in the previous frame.\n   */\n  touchCache: Map<number, TouchObj> = new Map();\n\n  /**\n   * An array of touches that are currenly fading out.\n   */\n  lingeringTouches: TouchObj[] = [];\n\n  /**\n   * The identifier of the winning touch.\n   */\n  winner?: number;\n\n  /**\n   * The previous time the canvas was rendered.\n   */\n  lastTime: number;\n\n  /**\n   * Used to wait for all contestants to join before growing the circles.\n   */\n  timeout: number;\n\n  constructor(props: {}) {\n    super(props);\n\n    this.ref = React.createRef();\n    this.parent = React.createRef();\n    this.mounted = false;\n\n    this.state = {\n      width: 200,\n      height: 200,\n      noTouch: true,\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n\n    this.onParentResize();\n    window.addEventListener(\"resize\", this.onParentResize);\n    this.ref.current!.addEventListener(\"touchstart\", this.touchStart);\n    this.ref.current!.addEventListener(\"touchend\", this.touchEnd);\n\n    this.drawCanvas(0);\n  }\n\n  onParentResize = () => {\n    this.setState({\n      width: this.parent.current!.clientWidth,\n      height: this.parent.current!.clientHeight,\n    });\n  };\n\n  componentWillUnmount() {\n    this.mounted = false;\n    window.removeEventListener(\"resize\", this.onParentResize);\n    this.ref.current!.removeEventListener(\"touchstart\", this.touchStart);\n    this.ref.current!.removeEventListener(\"touchend\", this.touchEnd);\n  }\n\n  drawCanvas: FrameRequestCallback = (t) => {\n    // Figure out time passed since last render.\n    let delta = 1 / 60;\n    if (this.lastTime === undefined) {\n      if (t !== 0) {\n        this.lastTime = t;\n      }\n    } else {\n      delta = t - this.lastTime;\n      this.lastTime = t;\n    }\n\n    // Counter start growing the circles after 1 second.\n    if (this.timeout < 1000) {\n      this.timeout += delta;\n    }\n\n    if (this.mounted) {\n      const radius = Math.max(this.state.width, this.state.height);\n      const offsetLeft = (this.ref.current!.offsetParent as HTMLDivElement)\n        .offsetLeft;\n      const offsetTop = (this.ref.current!.offsetParent as HTMLDivElement)\n        .offsetTop;\n\n      const ctx = this.ref.current!.getContext(\"2d\");\n      if (ctx !== null) {\n        ctx.clearRect(0, 0, this.state.width, this.state.height);\n        ctx.globalCompositeOperation = \"screen\";\n\n        // Draw all lingering circles that should fade away.\n        for (let i = this.lingeringTouches.length - 1; i >= 0; i--) {\n          const touch = this.lingeringTouches[i];\n\n          ctx.beginPath();\n          ctx.arc(\n            touch.x - offsetLeft,\n            touch.y - offsetTop,\n            touch.size,\n            0,\n            Math.PI * 2\n          );\n          ctx.fillStyle = touch.color;\n          ctx.fill();\n\n          touch.size -= 10;\n          if (touch.size <= 0) {\n            this.lingeringTouches.splice(i, 1);\n          }\n        }\n\n        // Draw and grow all currently touched areas.\n        for (let i = 0; i < this.touches.length; i++) {\n          const touch = this.touches[i];\n          const state = this.touchCache.get(touch.identifier)!;\n\n          ctx.beginPath();\n          ctx.arc(\n            touch.pageX - offsetLeft,\n            touch.pageY - offsetTop,\n            state.size,\n            0,\n            Math.PI * 2\n          );\n          ctx.fillStyle = state.color;\n          ctx.fill();\n\n          ctx.beginPath();\n          ctx.arc(\n            touch.pageX - offsetLeft,\n            touch.pageY - offsetTop,\n            state.size,\n            state.angle,\n            state.angle + (this.timeout / 1000) * Math.PI * 2\n          );\n          ctx.strokeStyle = state.color;\n          ctx.lineWidth = 10;\n          ctx.stroke();\n\n          if (\n            (this.winner === undefined || touch.identifier === this.winner) &&\n            this.timeout >= 1000\n          ) {\n            if (state.size < radius * 1.1) {\n              state.size += radius * Math.sqrt(state.size) * 0.00005 * delta;\n              state.size *= 1 - i / 150;\n            }\n          } else {\n            state.size = Math.max(state.size - 10, state.minSize);\n          }\n\n          if (state.size > radius * 0.9 && this.winner === undefined) {\n            this.winner = touch.identifier;\n          }\n        }\n\n        requestAnimationFrame(this.drawCanvas);\n      }\n    }\n  };\n\n  handleTouches(list: TouchList) {\n    this.touches = [];\n    for (let i = 0; i < list.length; i++) {\n      this.touches.push(list[i]);\n    }\n    shuffle(this.touches);\n\n    this.setState({\n      noTouch: this.touches.length === 0,\n    });\n  }\n\n  touchStart = (e: TouchEvent) => {\n    e.preventDefault();\n\n    if (this.touches.length === 0) {\n      shuffle(this.colors);\n      this.winner = undefined;\n    }\n\n    if (this.winner === undefined) {\n      this.timeout = 0;\n    }\n\n    const offsetLeft = (this.ref.current!.offsetParent as HTMLDivElement)\n      .offsetLeft;\n    const offsetTop = (this.ref.current!.offsetParent as HTMLDivElement)\n      .offsetTop;\n\n    this.handleTouches(e.touches);\n    const touch = e.changedTouches[0];\n    this.touchCache.set(touch.identifier, {\n      size: 20 * 2,\n      minSize: 20 * 2,\n      color: this.colors[touch.identifier % this.colors.length],\n      x: touch.pageX,\n      y: touch.pageY,\n\n      // -atan2(x - centerx, y - centery) - 90degrees\n      angle:\n        -Math.atan2(\n          touch.pageX - offsetLeft - this.state.width / 2,\n          touch.pageY - offsetTop - this.state.height / 2\n        ) -\n        Math.PI / 2,\n    });\n  };\n\n  touchEnd = (e: TouchEvent) => {\n    e.preventDefault();\n    const touch = e.changedTouches[0];\n    const state = this.touchCache.get(touch.identifier)!;\n    this.lingeringTouches.push(state);\n\n    this.handleTouches(e.touches);\n    this.touchCache.delete(touch.identifier);\n  };\n\n  render() {\n    return (\n      <div className=\"canvas-parent\" ref={this.parent}>\n        {this.state.noTouch ? (\n          <span className=\"touchdecider-message\">\n            Raak het scherm met 1 vinger aan om te beslissen wie begint.\n          </span>\n        ) : null}\n        <canvas\n          className=\"touchdecider-canvas\"\n          width={this.state.width}\n          height={this.state.height}\n          ref={this.ref}\n        />\n      </div>\n    );\n  }\n}\n\nexport default TouchDecider;\n","import \"./css/App.css\";\n\nimport React from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport Tooltip from \"react-simple-tooltip\";\nimport AsyncMap from \"./components/AsyncMap\";\nimport BggList from \"./components/BggList\";\nimport BggRequests from \"./components/BggRequests\";\nimport { Container } from \"./components/Container\";\nimport EventCard from \"./components/EventCard\";\nimport IconLink from \"./components/IconLink\";\nimport ScrollToTop from \"./components/ScrollToTop\";\nimport TouchDecider from \"./components/TouchDecider\";\nimport { ChangeEvent, Inventory } from \"./data/Inventory\";\nimport { withInventory } from \"./InventoryProvider\";\n\nexport interface State {\n  username: string;\n}\n\nexport interface Props {\n  inventory: Inventory;\n}\n\nexport class App extends React.Component<\n  Props & React.ClassAttributes<App>,\n  State\n> {\n  constructor(props: Props & React.ClassAttributes<App>) {\n    super(props);\n    this.state = {\n      username: \"\",\n    };\n  }\n\n  componentDidMount() {\n    this.props.inventory.addChangeListener(ChangeEvent.USER, (user) => {\n      if (user) {\n        this.setState({ username: (user as FirebaseUser).displayName });\n      }\n    });\n  }\n\n  logout = async () => {\n    await this.props.inventory.logout();\n    this.setState({\n      username: \"\",\n    });\n  };\n\n  login = async () => {\n    const user = await this.props.inventory.login();\n    this.setState({\n      username: user.displayName,\n    });\n  };\n\n  home = () => {\n    return (\n      <div>\n        <EventCard />\n        <BggRequests />\n      </div>\n    );\n  };\n\n  games() {\n    return <BggList />;\n  }\n\n  info() {\n    return (\n      <div>\n        <Container>\n          <h3>Wie zijn wij?</h3>\n          Spellenclub De pietjesbak is een spellenclub in Gent / Mariakerke.{\" \"}\n          <br />\n          Elke derde vrijdag van de maand (behalve in juli en augustus) <br />\n          <br />\n          Voor 1 € inkom is iedereen welkom om een nieuw of oud spel mee te\n          komen spelen. <br />\n          Oud of Jong, moeilijk of makkelijk, we brengen steeds een grote\n          variatie aan spellen mee die ter plaatse uitgelegd worden. <br />\n          We starten rond 19u30 en gaan door tot ± 23 a 24u.\n          <h3>In 't Geestje</h3>\n          <span className=\"location\">\n            Zandloperstraat 83 <br />\n            9030 Mariakerke\n          </span>\n          <AsyncMap />\n        </Container>\n      </div>\n    );\n  }\n\n  touchDecider() {\n    return (\n      <Container className=\"no-overflow\">\n        <p>\n          Deze app kan gebruikt worden om een start speler te bepalen. Iedere\n          speler plaatst 1 vinger op het scherm, de speler wiens kleur het\n          volledige scherm inneemt, is de start speler!\n        </p>\n        {\"ontouchstart\" in document.documentElement! ? null : (\n          <span className=\"mute\">\n            PS: Dit werkt enkel op apparaten met een touchscreen.\n          </span>\n        )}\n        <TouchDecider />\n      </Container>\n    );\n  }\n\n  noRoute() {\n    return (\n      <div className=\"center not-found\">\n        <span>404</span>\n        <div style={{ fontSize: 14 + \"vw\", whiteSpace: \"nowrap\" }}>\n          ¯\\_(ツ)_/¯\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <HashRouter>\n        <ScrollToTop>\n          <div className=\"full-height\">\n            <div className=\"page-wrap\">\n              <header>\n                <div className=\"wrapper\">\n                  <h1>\n                    <svg id=\"logo\" width=\"57\" height=\"52\">\n                      <path\n                        d=\"M4 25.650635094610966L16.5 4L41.5 4L54 25.650635094610966L41.5 47.30127018922193L16.5 47.30127018922193Z\"\n                        strokeWidth=\"5\"\n                        fill=\"#c33\"\n                        stroke=\"#eee\"\n                      />\n                    </svg>\n                    Spellenclub De Pietjesbak\n                  </h1>\n                </div>\n              </header>\n              <div className=\"wrapper\">\n                <nav className=\"menu\">\n                  <ul>\n                    <li>\n                      <IconLink icon=\"globe\" to=\"/\" text=\"Home\" />\n                    </li>\n                    <li>\n                      <IconLink icon=\"megaphone\" to=\"/info\" text=\"Info\" />\n                    </li>\n                    <li>\n                      <IconLink icon=\"puzzle\" to=\"/games\" text=\"Games\" />\n                    </li>\n                    <li className=\"right\">\n                      {this.props.inventory.user !== null ? (\n                        <button onClick={this.logout}>\n                          <i className=\"icon-logout\" /> Log uit\n                        </button>\n                      ) : (\n                        <button onClick={this.login}>\n                          <i className=\"icon-login\" /> Log in\n                        </button>\n                      )}\n                    </li>\n                  </ul>\n                </nav>\n                {this.props.inventory.user !== null ? (\n                  <div>\n                    <div className=\"user-profile\">\n                      <Tooltip\n                        content={`Ingeloged als ${this.state.username}`}\n                        placement=\"left\"\n                      >\n                        <img\n                          alt={this.state.username}\n                          src={this.props.inventory.user.photoURL}\n                        />\n                      </Tooltip>\n                    </div>\n                  </div>\n                ) : null}\n                <Switch>\n                  <Route exact={true} path=\"/\" component={this.home} />\n                  <Route path=\"/games\" component={this.games} />\n                  <Route path=\"/info\" component={this.info} />\n                  <Route path=\"/startspeler\" component={this.touchDecider} />\n                  <Route render={this.noRoute} />\n                </Switch>\n              </div>\n            </div>\n            <footer>\n              <ul className=\"wrapper\">\n                <li>\n                  <a href=\"https://www.facebook.com/gezelschapsspellenpietjesbak/\">\n                    <i className=\"icon-facebook-squared\" />\n                    Like\n                  </a>\n                </li>\n                <li>\n                  <a href=\"mailto:pietdecoensel@gmail.com\">\n                    <i className=\"icon-mail-alt\" />\n                    Contact\n                  </a>\n                </li>\n              </ul>\n              <span>\n                &copy; Spellenclub De Pietjesbak &#9679; Lennert Claeys\n              </span>\n            </footer>\n          </div>\n        </ScrollToTop>\n      </HashRouter>\n    );\n  }\n}\n\nexport default withInventory(App);\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://goo.gl/SC7cgQ\"\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === \"installed\") {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log(\"New content is available; please refresh.\");\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log(\"Content is cached for offline use.\");\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\")!.indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import \"./css/reset.css\";\n\nimport \"./css/animation.css\";\nimport \"./css/icons.css\";\nimport \"./css/index.css\";\n\n// import \"core-js/fn/symbol/iterator.js\"; // Edge ლ(ಠ益ಠლ)\nimport React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}